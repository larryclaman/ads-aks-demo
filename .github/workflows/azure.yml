# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. For Linux apps, add an app setting called WEBSITE_WEBDEPLOY_USE_SCM and set it to true in your app **before downloading the file**.
#      For more instructions see: https://docs.microsoft.com/azure/app-service/configure-common#configure-app-settings
#
# 2. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
name: DeployToAKS

on:
  workflow_dispatch:

env:
  AZURE_AKS_NAME: aksCluster1
  AZURE_AKS_RG: privateaks
  NAMESPACE: vote


jobs:
  deploy:
    name: Deploy to AKS
    runs-on: ghagent  ## THIS IS WHERE WE SET THE PRIVATE RUNNER
    steps:
    - uses: actions/checkout@v2
  
# Set the target AKS cluster.
    - uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_AKS_CREDENTIALS }}'
        cluster-name: ${{env.AZURE_AKS_NAME }}
        resource-group:  ${{env.AZURE_AKS_RG }}
        
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
  
  
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
         azure-vote-all-in-one-redis.yaml
        namespace: ${{ env.NAMESPACE }}
